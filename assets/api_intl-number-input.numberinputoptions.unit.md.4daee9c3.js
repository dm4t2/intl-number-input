import{_ as t,c as e,o as n,a as i}from"./app.03d1a66b.js";const h='{"title":"NumberInputOptions.unit property","description":"","frontmatter":{},"headers":[{"level":2,"title":"NumberInputOptions.unit property","slug":"numberinputoptions-unit-property"},{"level":2,"title":"Example","slug":"example"}],"relativePath":"api/intl-number-input.numberinputoptions.unit.md"}',r={},o=i(`<p><a href="./">Overview</a> &gt; <a href="./intl-number-input.numberinputoptions.html">NumberInputOptions</a> &gt; <a href="./intl-number-input.numberinputoptions.unit.html">unit</a></p><h2 id="numberinputoptions-unit-property" tabindex="-1">NumberInputOptions.unit property <a class="header-anchor" href="#numberinputoptions-unit-property" aria-hidden="true">#</a></h2><p>A <a href="https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier" target="_blank" rel="noopener noreferrer">unit identifier</a>, which is required when using <a href="./intl-number-input.numberformatstyle.html">NumberFormatStyle.Unit</a>. Pairs of simple units can be concatenated with &quot;-per-&quot; to make a compound unit.</p><p><strong>Signature:</strong></p><div class="language-typescript"><pre><code>unit<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><p><code>&quot;byte&quot;</code> (simple unit) or <code>&quot;byte-per-second&quot;</code> (compound unit).</p>`,7),p=[o];function a(u,s,l,c,m,d){return n(),e("div",null,p)}var b=t(r,[["render",a]]);export{h as __pageData,b as default};
